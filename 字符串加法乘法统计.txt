#include <stdio.h>
#include <string.h>
#include <Windows.h>

void f1(){
    char a[100];
    int i, in_word, word_num;
	
    gets_s(a);
    word_num = 0; 
    in_word = 0; 
    int kong_num = 0;
    int zimu_num = 0;
    for (i = 0; a[i]; i++) {
        if (a[i] >= 'a' && a[i] <= 'z') zimu_num++;
        if (a[i] >= 'A' && a[i] <= 'Z') zimu_num++;
        if (a[i] == ' ') { 
            in_word = 0; 
            kong_num++;
        }
        else if (in_word == 0) { 
            word_num++; 
            in_word = 1; 
        }
    }
    printf("单词有 %d\n", word_num);
    printf("空格有 %d\n", kong_num);
    printf("字母有 %d\n", zimu_num);
}
void f2(){
    char s[100]; 
	gets_s(s);
    int sum = 0;
    for (int i = 0; i < strlen(s); i++) {
        int num = 0;
        while (s[i] >= '0' && s[i] <= '9') {
            num = num * 10 + s[i] - '0';
            i++;
        }
        sum += num;
    }

    printf("sum = %d\n", sum);
}
void sum(int max, int b[], int b1[])
{
	int i;
	for (i = 0; i < max; i++)
	{
		b[i] = b[i] + b1[i];
		if (b[i] > 9)
		{//进位
			b[i] = b[i] - 10;
			b[i + 1] = b[i + 1] + 1;
		}
	}
}

void cheng(int max, int b[], int b1[], int d[])
{
	int i, j;
	for (i = 0; i < max; i++)
	{
		for (j = 0; j < max; j++)
			d[i + j] += b[i] * b1[j];
	}
	for (i = 0; i < 400; i++)
	{
		if (d[i] > 9)
		{
			int dd = d[i] / 10;
			int tt = d[i] % 10;
			d[i] = tt;
			d[i + 1] = d[i + 1] + dd;
		}
	}
}
void f3(){
	int max, i, j, k;
    char a[200], a1[200];
    int b[200], b1[200];
	int d[400];//积
	scanf("%s", a);
	scanf("%s", a1);
	memset(b, 0, sizeof(b));
	memset(b1, 0, sizeof(b1));
	int c = strlen(a);
	int c1 = strlen(a1);
	if (c > c1)
		max = c;
	else
		max = c1;
	for (i = c - 1, j = 0; i >= 0; i--)
		b[j++] = a[i] - '0';
	for (i = c1 - 1, j = 0; i >= 0; i--)
		b1[j++] = a1[i] - '0';
	sum(max, b, b1);
	for (i = 199; i >= 0; i--)
		if (b[i] != 0)
			break;
	printf("加法结果：");
	for (; i >= 0; i--)
		printf("%d", b[i]);
	printf("\n");


    memset(b, 0, sizeof(b));
    memset(b1, 0, sizeof(b1));
    memset(d, 0, sizeof(d));
    for (i = c - 1, j = 0; i >= 0; i--)
        b[j++] = a[i] - '0';
    for (i = c1 - 1, j = 0; i >= 0; i--)
        b1[j++] = a1[i] - '0';
    cheng(max, b, b1, d);
    int flag = 0;

	printf("乘法结果：");
    for (i = 199 * 2; i >= 0; i--)
    {
        if (flag)
            printf("%d", d[i]);
        else if (d[i])
        {
            printf("%d", d[i]);
            flag = 1;
        }
    }
    if (!flag)
        printf("%c", '0');
	printf("\n");
}

int main() {
	while (1) {
		printf("1: 第一种字符串\n");
		printf("2: 第二种字符串\n");
		printf("3: 第三种字符串\n");
		int op;
		scanf("%d", &op);
		getchar();
		if (op == 1) f1();
		if (op == 2) f2();
		if (op == 3) f3();
		system("pause");
		system("cls");
	}
	return 0;
}